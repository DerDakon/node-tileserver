--- /home/alexander/Desktop/kothic-leaflet.js
+++ /home/alexander/Projekte/OpenRailwayMap/orm-latest/js/kothic-leaflet.js
@@ -1,9 +1,35 @@
+/*
+Copyright (c) 2011-2013, Darafei Praliaskouski, Vladimir Agafonkin, Maksim Gurtovenko
+All rights reserved.
+
+Redistribution and use in source and binary forms, with or without modification, are
+permitted provided that the following conditions are met:
+
+   1. Redistributions of source code must retain the above copyright notice, this list of
+      conditions and the following disclaimer.
+
+   2. Redistributions in binary form must reproduce the above copyright notice, this list
+      of conditions and the following disclaimer in the documentation and/or other materials
+	  provided with the distribution.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
+EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
+TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+*/
+
+
 L.TileLayer.Kothic = L.TileLayer.Canvas.extend({
     options: {
-        tileSize: 256 * 4,
-        zoomOffset: 2,
+        tileSize: 256,
+        zoomOffset: 0,
         minZoom: 2,
-        maxZoom: 22,
+        maxZoom: 19,
         updateWhenIdle: true,
         unloadInvisibleTiles: true,
         attribution: 'Map data &copy; 2013 <a href="http://osm.org/copyright">OpenStreetMap</a> contributors,' +
@@ -41,13 +67,13 @@
             delete layer._scripts[key];
         }
 
-        this._invertYAxe(data);
+		// modified by rurseekatze
+		// this._invertYAxe(data);
 
         var styles = this.options.styles;
 
         Kothic.render(canvas, data, zoom + zoomOffset, {
             styles: styles,
-            locales: ['be', 'ru', 'en'],
             onRenderComplete: onRenderComplete
         });
 
@@ -69,9 +95,10 @@
     },
 
     enableStyle: function(name) {
-        if (MapCSS.availableStyles.indexOf(name) >= 0 && this.options.styles.indexOf(name) < 0) {
+		// start modified by rurseekatze
+        if (this.options.styles.indexOf(name) == -1) {
+		// end modified by rurseekatze
             this.options.styles.push(name);
-            this.redraw();
         }
     },
 
@@ -79,19 +106,26 @@
         if (this.options.styles.indexOf(name) >= 0) {
             var i = this.options.styles.indexOf(name);
             this.options.styles.splice(i, 1);
-            this.redraw();
         }
     },
 
+	// start modified by rurseekatze
     redraw: function() {
         MapCSS.invalidateCache();
-        // TODO implement layer.redraw() in Leaflet
+
         this._map.getPanes().tilePane.empty = false;
-        if (this._map && this._map._container) {
-            this._reset();
-            this._update();
-        }
+
+		if (this._map) {
+			this._reset({hard: true});
+			this._update();
+		}
+
+		for (var i in this._tiles) {
+			this._redrawTile(this._tiles[i]);
+		}
+		return this;
     },
+	// end modified by rurseekatze
 
     _invertYAxe: function(data) {
         var type, coordinates, tileSize = data.granularity, i, j, k, l, feature;
